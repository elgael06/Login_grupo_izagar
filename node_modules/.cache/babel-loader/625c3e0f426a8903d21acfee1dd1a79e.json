{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gael\\\\Desktop\\\\front-end\\\\Login\\\\src\\\\components\\\\Toask\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { withToastManager } from 'react-toast-notifications';\n\nclass ConnectivityListener extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOnline: window ? window.navigator.onLine : false\n    };\n\n    this.onlineCallback = () => {\n      this.props.toastManager.remove(this.offlineToastId);\n      this.offlineToastId = null;\n    };\n\n    this.offlineCallback = id => {\n      this.offlineToastId = id;\n    };\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    const isOnline = this.state.isOnline;\n\n    if (prevState.isOnline !== isOnline) {\n      return {\n        isOnline\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(props, state, snapshot) {\n    if (!snapshot) return;\n    const toastManager = props.toastManager;\n    const isOnline = snapshot.isOnline;\n    const content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, isOnline ? 'Online' : \"Offline\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, isOnline ? 'Editing is available again' : 'Changes you make may not be saved'));\n    const callback = isOnline ? this.onlineCallback : this.offlineCallback;\n    toastManager.add(content, {\n      appearance: 'info',\n      autoDismiss: isOnline\n    }, callback);\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default withToastManager(ConnectivityListener);","map":{"version":3,"sources":["C:\\Users\\gael\\Desktop\\front-end\\Login\\src\\components\\Toask\\index.jsx"],"names":["React","Component","withToastManager","ConnectivityListener","state","isOnline","window","navigator","onLine","onlineCallback","props","toastManager","remove","offlineToastId","offlineCallback","id","getSnapshotBeforeUpdate","prevProps","prevState","componentDidUpdate","snapshot","content","callback","add","appearance","autoDismiss","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,MAAMC,oBAAN,SAAmCF,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CG,KAD2C,GACnC;AAAEC,MAAAA,QAAQ,EAAEC,MAAM,GAAGA,MAAM,CAACC,SAAP,CAAiBC,MAApB,GAA6B;AAA/C,KADmC;;AAAA,SAK3CC,cAL2C,GAK1B,MAAM;AACrB,WAAKC,KAAL,CAAWC,YAAX,CAAwBC,MAAxB,CAA+B,KAAKC,cAApC;AACA,WAAKA,cAAL,GAAsB,IAAtB;AACD,KAR0C;;AAAA,SAS3CC,eAT2C,GASzBC,EAAE,IAAI;AACtB,WAAKF,cAAL,GAAsBE,EAAtB;AACD,KAX0C;AAAA;;AAa3CC,EAAAA,uBAAuB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAAA,UACpCb,QADoC,GACvB,KAAKD,KADkB,CACpCC,QADoC;;AAG5C,QAAIa,SAAS,CAACb,QAAV,KAAuBA,QAA3B,EAAqC;AACnC,aAAO;AAAEA,QAAAA;AAAF,OAAP;AACD;;AAED,WAAO,IAAP;AACD;;AACDc,EAAAA,kBAAkB,CAACT,KAAD,EAAQN,KAAR,EAAegB,QAAf,EAAyB;AACzC,QAAI,CAACA,QAAL,EAAe;AAD0B,UAGjCT,YAHiC,GAGhBD,KAHgB,CAGjCC,YAHiC;AAAA,UAIjCN,QAJiC,GAIpBe,QAJoB,CAIjCf,QAJiC;AAMzC,UAAMgB,OAAO,GACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAShB,QAAQ,GAAG,QAAH,GAAc,SAA/B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,GACL,4BADK,GAEL,mCAHN,CAFF,CADF;AAWA,UAAMiB,QAAQ,GAAGjB,QAAQ,GACrB,KAAKI,cADgB,GAErB,KAAKK,eAFT;AAIAH,IAAAA,YAAY,CAACY,GAAb,CAAiBF,OAAjB,EAA0B;AACxBG,MAAAA,UAAU,EAAE,MADY;AAExBC,MAAAA,WAAW,EAAEpB;AAFW,KAA1B,EAGGiB,QAHH;AAID;;AACDI,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD;;AAlD0C;;AAqD7C,eAAexB,gBAAgB,CAACC,oBAAD,CAA/B","sourcesContent":["import React, { Component } from 'react';\r\nimport { withToastManager } from 'react-toast-notifications';\r\n\r\nclass ConnectivityListener extends Component {\r\n  state = { isOnline: window ? window.navigator.onLine : false };\r\n\r\n  // NOTE: add/remove event listeners omitted for brevity\r\n\r\n  onlineCallback = () => {\r\n    this.props.toastManager.remove(this.offlineToastId);\r\n    this.offlineToastId = null;\r\n  };\r\n  offlineCallback = id => {\r\n    this.offlineToastId = id;\r\n  }\r\n\r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    const { isOnline } = this.state;\r\n\r\n    if (prevState.isOnline !== isOnline) {\r\n      return { isOnline };\r\n    }\r\n\r\n    return null;\r\n  }\r\n  componentDidUpdate(props, state, snapshot) {\r\n    if (!snapshot) return;\r\n\r\n    const { toastManager } = props;\r\n    const { isOnline } = snapshot;\r\n\r\n    const content = (\r\n      <div>\r\n        <strong>{isOnline ? 'Online' : \"Offline\"}</strong>\r\n        <div>\r\n          {isOnline\r\n            ? 'Editing is available again'\r\n            : 'Changes you make may not be saved'}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const callback = isOnline\r\n      ? this.onlineCallback\r\n      : this.offlineCallback;\r\n\r\n    toastManager.add(content, {\r\n      appearance: 'info',\r\n      autoDismiss: isOnline,\r\n    }, callback);\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default withToastManager(ConnectivityListener);"]},"metadata":{},"sourceType":"module"}